{"ast":null,"code":"var _jsxFileName = \"/Users/lovish888/Desktop/Sphinx-Explorer/frontend/src/components/TransactionList.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Typography from \"@mui/material/Typography\";\nimport { BASE_URL } from \"../utils/api\";\nimport TransactionItem from \"./TransactionItem\";\nimport { CircularProgress, Container } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TransactionList = ({\n  address,\n  refresh\n}) => {\n  _s();\n  const [transactions, setTransactions] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const fetchTransactions = async () => {\n    try {\n      setIsLoading(true);\n      const response = await axios.get(`${BASE_URL}/api/transactions/${address}`);\n      console.log(response.data);\n      setTransactions(response.data.transactions);\n      setIsLoading(false);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  useEffect(() => {\n    if (address) {\n      fetchTransactions();\n    }\n  }, [refresh]);\n  return isLoading ? /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this) : transactions.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      children: \"Your Transactions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), transactions.map((transaction, index) => /*#__PURE__*/_jsxDEV(TransactionItem, {\n      transaction: transaction\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(Container, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(TransactionList, \"Jhkf7MYKvpGyxOsd2e9H6qLp6BQ=\");\n_c = TransactionList;\nexport default TransactionList;\nvar _c;\n$RefreshReg$(_c, \"TransactionList\");","map":{"version":3,"names":["React","useState","useEffect","axios","Typography","BASE_URL","TransactionItem","CircularProgress","Container","jsxDEV","_jsxDEV","TransactionList","address","refresh","_s","transactions","setTransactions","isLoading","setIsLoading","fetchTransactions","response","get","console","log","data","error","fileName","_jsxFileName","lineNumber","columnNumber","length","children","variant","map","transaction","index","_c","$RefreshReg$"],"sources":["/Users/lovish888/Desktop/Sphinx-Explorer/frontend/src/components/TransactionList.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Typography from \"@mui/material/Typography\";\nimport { BASE_URL } from \"../utils/api\";\nimport { Transaction } from \"../types/transaction\";\nimport TransactionItem from \"./TransactionItem\";\nimport { CircularProgress, Container } from \"@mui/material\";\n\ntype Props = {\n  address: string;\n  refresh: boolean;\n};\n\nconst TransactionList: React.FC<Props> = ({ address, refresh }) => {\n  const [transactions, setTransactions] = useState<Transaction[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const fetchTransactions = async () => {\n    try {\n      setIsLoading(true);\n      const response = await axios.get(\n        `${BASE_URL}/api/transactions/${address}`\n      );\n      console.log(response.data);\n      setTransactions(response.data.transactions);\n      setIsLoading(false);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  useEffect(() => {\n    if (address) {\n      fetchTransactions();\n    }\n  }, [refresh]);\n\n  return isLoading ? (\n    <CircularProgress />\n  ) : transactions.length > 0 ? (\n    <div>\n      <Typography variant=\"h6\">Your Transactions</Typography>\n      {transactions.map((transaction, index) => (\n        <TransactionItem key={index} transaction={transaction} />\n      ))}\n    </div>\n  ) : (\n    <Container />\n  );\n};\n\nexport default TransactionList;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,UAAU,MAAM,0BAA0B;AACjD,SAASC,QAAQ,QAAQ,cAAc;AAEvC,OAAOC,eAAe,MAAM,mBAAmB;AAC/C,SAASC,gBAAgB,EAAEC,SAAS,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAO5D,MAAMC,eAAgC,GAAGA,CAAC;EAAEC,OAAO;EAAEC;AAAQ,CAAC,KAAK;EAAAC,EAAA;EACjE,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGf,QAAQ,CAAgB,EAAE,CAAC;EACnE,MAAM,CAACgB,SAAS,EAAEC,YAAY,CAAC,GAAGjB,QAAQ,CAAC,KAAK,CAAC;EAEjD,MAAMkB,iBAAiB,GAAG,MAAAA,CAAA,KAAY;IACpC,IAAI;MACFD,YAAY,CAAC,IAAI,CAAC;MAClB,MAAME,QAAQ,GAAG,MAAMjB,KAAK,CAACkB,GAAG,CAC7B,GAAEhB,QAAS,qBAAoBO,OAAQ,EAC1C,CAAC;MACDU,OAAO,CAACC,GAAG,CAACH,QAAQ,CAACI,IAAI,CAAC;MAC1BR,eAAe,CAACI,QAAQ,CAACI,IAAI,CAACT,YAAY,CAAC;MAC3CG,YAAY,CAAC,KAAK,CAAC;IACrB,CAAC,CAAC,OAAOO,KAAK,EAAE;MACdH,OAAO,CAACG,KAAK,CAACA,KAAK,CAAC;IACtB;EACF,CAAC;EAEDvB,SAAS,CAAC,MAAM;IACd,IAAIU,OAAO,EAAE;MACXO,iBAAiB,CAAC,CAAC;IACrB;EACF,CAAC,EAAE,CAACN,OAAO,CAAC,CAAC;EAEb,OAAOI,SAAS,gBACdP,OAAA,CAACH,gBAAgB;IAAAmB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC,GAClBd,YAAY,CAACe,MAAM,GAAG,CAAC,gBACzBpB,OAAA;IAAAqB,QAAA,gBACErB,OAAA,CAACN,UAAU;MAAC4B,OAAO,EAAC,IAAI;MAAAD,QAAA,EAAC;IAAiB;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY,CAAC,EACtDd,YAAY,CAACkB,GAAG,CAAC,CAACC,WAAW,EAAEC,KAAK,kBACnCzB,OAAA,CAACJ,eAAe;MAAa4B,WAAW,EAAEA;IAAY,GAAhCC,KAAK;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAA6B,CACzD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC,gBAENnB,OAAA,CAACF,SAAS;IAAAkB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CACb;AACH,CAAC;AAACf,EAAA,CApCIH,eAAgC;AAAAyB,EAAA,GAAhCzB,eAAgC;AAsCtC,eAAeA,eAAe;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}