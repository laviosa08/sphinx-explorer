{"ast":null,"code":"var _jsxFileName = \"/Users/lovish888/Desktop/Sphinx-Explorer/frontend/src/components/Balance.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Typography from \"@mui/material/Typography\";\nimport { BASE_URL } from \"../utils/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Balance = ({\n  address,\n  refresh\n}) => {\n  _s();\n  const [balance, setBalance] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const fetchBalance = async () => {\n    try {\n      setIsLoading(true);\n      const response = await axios.get(`${BASE_URL}/api/balance/${address}`);\n      setBalance(response.data.balance);\n      setIsLoading(false);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  useEffect(() => {\n    fetchBalance();\n  }, [refresh]);\n  return isLoading ? /*#__PURE__*/_jsxDEV(Typography, {\n    variant: \"h6\",\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(Typography, {\n    variant: \"h6\",\n    children: [\"Wallet Balance: \", balance, \" USDC\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(Balance, \"iWORl9f7YwhLQ/zUuJyqtSGGJE4=\");\n_c = Balance;\nexport default Balance;\nvar _c;\n$RefreshReg$(_c, \"Balance\");","map":{"version":3,"names":["React","useState","useEffect","axios","Typography","BASE_URL","jsxDEV","_jsxDEV","Balance","address","refresh","_s","balance","setBalance","isLoading","setIsLoading","fetchBalance","response","get","data","error","console","variant","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/lovish888/Desktop/Sphinx-Explorer/frontend/src/components/Balance.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Typography from \"@mui/material/Typography\";\nimport { BASE_URL } from \"../utils/api\";\n\ntype Props = {\n  address: string;\n  refresh: boolean;\n};\n\nconst Balance: React.FC<Props> = ({ address, refresh }) => {\n  const [balance, setBalance] = useState<string | null>(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const fetchBalance = async () => {\n    try {\n      setIsLoading(true);\n      const response = await axios.get(`${BASE_URL}/api/balance/${address}`);\n      setBalance(response.data.balance);\n      setIsLoading(false);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  useEffect(() => {\n    fetchBalance();\n  }, [refresh]);\n\n  return isLoading ? (\n    <Typography variant=\"h6\">Loading...</Typography>\n  ) : (\n    <Typography variant=\"h6\">Wallet Balance: {balance} USDC</Typography>\n  );\n};\n\nexport default Balance;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,UAAU,MAAM,0BAA0B;AACjD,SAASC,QAAQ,QAAQ,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAOxC,MAAMC,OAAwB,GAAGA,CAAC;EAAEC,OAAO;EAAEC;AAAQ,CAAC,KAAK;EAAAC,EAAA;EACzD,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAgB,IAAI,CAAC;EAC3D,MAAM,CAACa,SAAS,EAAEC,YAAY,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EAEjD,MAAMe,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI;MACFD,YAAY,CAAC,IAAI,CAAC;MAClB,MAAME,QAAQ,GAAG,MAAMd,KAAK,CAACe,GAAG,CAAE,GAAEb,QAAS,gBAAeI,OAAQ,EAAC,CAAC;MACtEI,UAAU,CAACI,QAAQ,CAACE,IAAI,CAACP,OAAO,CAAC;MACjCG,YAAY,CAAC,KAAK,CAAC;IACrB,CAAC,CAAC,OAAOK,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IACtB;EACF,CAAC;EAEDlB,SAAS,CAAC,MAAM;IACdc,YAAY,CAAC,CAAC;EAChB,CAAC,EAAE,CAACN,OAAO,CAAC,CAAC;EAEb,OAAOI,SAAS,gBACdP,OAAA,CAACH,UAAU;IAACkB,OAAO,EAAC,IAAI;IAAAC,QAAA,EAAC;EAAU;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAY,CAAC,gBAEhDpB,OAAA,CAACH,UAAU;IAACkB,OAAO,EAAC,IAAI;IAAAC,QAAA,GAAC,kBAAgB,EAACX,OAAO,EAAC,OAAK;EAAA;IAAAY,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAY,CACpE;AACH,CAAC;AAAChB,EAAA,CAxBIH,OAAwB;AAAAoB,EAAA,GAAxBpB,OAAwB;AA0B9B,eAAeA,OAAO;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}