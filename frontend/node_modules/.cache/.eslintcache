[{"/Users/saloniagarwal/Desktop/Sphinx-Explorer/frontend/src/index.tsx":"1","/Users/saloniagarwal/Desktop/Sphinx-Explorer/frontend/src/App.tsx":"2","/Users/saloniagarwal/Desktop/Sphinx-Explorer/frontend/src/pages/Explorer.tsx":"3","/Users/saloniagarwal/Desktop/Sphinx-Explorer/frontend/src/components/TransactionList.tsx":"4","/Users/saloniagarwal/Desktop/Sphinx-Explorer/frontend/src/components/Header.tsx":"5","/Users/saloniagarwal/Desktop/Sphinx-Explorer/frontend/src/components/Balance.tsx":"6","/Users/saloniagarwal/Desktop/Sphinx-Explorer/frontend/src/utils/api.ts":"7","/Users/saloniagarwal/Desktop/Sphinx-Explorer/frontend/src/components/TransactionItem.tsx":"8"},{"size":251,"mtime":1692344989000,"results":"9","hashOfConfig":"10"},{"size":240,"mtime":1692355408000,"results":"11","hashOfConfig":"10"},{"size":1212,"mtime":1692355399000,"results":"12","hashOfConfig":"10"},{"size":1520,"mtime":1692355045000,"results":"13","hashOfConfig":"10"},{"size":255,"mtime":1692347289000,"results":"14","hashOfConfig":"10"},{"size":1526,"mtime":1692355701000,"results":"15","hashOfConfig":"10"},{"size":90,"mtime":1692358707256,"results":"16","hashOfConfig":"10"},{"size":1016,"mtime":1692355708000,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"147f1ij",{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"27"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"27"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},"/Users/saloniagarwal/Desktop/Sphinx-Explorer/frontend/src/index.tsx",[],[],"/Users/saloniagarwal/Desktop/Sphinx-Explorer/frontend/src/App.tsx",[],[],"/Users/saloniagarwal/Desktop/Sphinx-Explorer/frontend/src/pages/Explorer.tsx",[],[],[],"/Users/saloniagarwal/Desktop/Sphinx-Explorer/frontend/src/components/TransactionList.tsx",["45"],[],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Typography from \"@mui/material/Typography\";\nimport { BASE_URL } from \"../utils/api\";\nimport { Transaction } from \"../types/transaction\";\nimport TransactionItem from \"./TransactionItem\";\nimport { Box, CircularProgress, Container } from \"@mui/material\";\n\ntype Props = {\n  address: string;\n  refresh: boolean;\n};\n\nconst TransactionList: React.FC<Props> = ({ address, refresh }) => {\n  const [transactions, setTransactions] = useState<Transaction[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const fetchTransactions = async () => {\n    try {\n      setIsLoading(true);\n      const response = await axios.get(\n        `${BASE_URL}/api/transactions/${address}`\n      );\n      console.log(response.data);\n      setTransactions(response.data.transactions);\n      setIsLoading(false);\n    } catch (error) {\n      console.error(error);\n      setIsLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    if (address !== \"\") {\n      fetchTransactions();\n    }\n  }, [refresh]);\n\n  return isLoading ? (\n    <Box alignSelf=\"center\" marginTop={2}>\n      <CircularProgress />\n    </Box>\n  ) : transactions.length > 0 ? (\n    <Box marginTop={4}>\n      <Typography variant=\"h6\">Your Transactions</Typography>\n      <Box height={20} />\n      {transactions.map((transaction, index) => (\n        <TransactionItem key={index} transaction={transaction} />\n      ))}\n    </Box>\n  ) : (\n    <Container />\n  );\n};\n\nexport default TransactionList;\n","/Users/saloniagarwal/Desktop/Sphinx-Explorer/frontend/src/components/Header.tsx",[],[],"/Users/saloniagarwal/Desktop/Sphinx-Explorer/frontend/src/components/Balance.tsx",["46","47"],[],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Typography from \"@mui/material/Typography\";\nimport { BASE_URL } from \"../utils/api\";\nimport { Box, CircularProgress, Container } from \"@mui/material\";\nimport { BoltRounded } from \"@mui/icons-material\";\n\ntype Props = {\n  address: string;\n  refresh: boolean;\n};\n\nconst Balance: React.FC<Props> = ({ address, refresh }) => {\n  const [balance, setBalance] = useState<string | null>(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const fetchBalance = async () => {\n    try {\n      setIsLoading(true);\n      const response = await axios.get(`${BASE_URL}/api/balance/${address}`);\n      setBalance(response.data.balance);\n      setIsLoading(false);\n    } catch (error) {\n      console.error(error);\n      setIsLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    if (address !== \"\") fetchBalance();\n  }, [refresh]);\n\n  return isLoading ? (\n    <Box alignSelf=\"center\" marginTop={2}>\n      <CircularProgress />\n    </Box>\n  ) : balance ? (\n    <Box\n      display=\"flex\"\n      justifyContent=\"space-between\"\n      alignItems=\"center\"\n      alignSelf={\"center\"}\n      border=\"0.5px solid grey\"\n      padding={1}\n      marginTop={2}\n      borderRadius={2}\n      bgcolor=\"#CAF1DE\"\n      maxWidth={window.innerWidth * 0.4}\n    >\n      <Typography>Wallet Balance </Typography>\n      <Box width={100} />\n      <Typography fontWeight={\"bold\"}>{balance} USDC</Typography>\n    </Box>\n  ) : (\n    <Container />\n  );\n};\n\nexport default Balance;\n","/Users/saloniagarwal/Desktop/Sphinx-Explorer/frontend/src/utils/api.ts",[],[],"/Users/saloniagarwal/Desktop/Sphinx-Explorer/frontend/src/components/TransactionItem.tsx",[],[],{"ruleId":"48","severity":1,"message":"49","line":37,"column":6,"nodeType":"50","endLine":37,"endColumn":15,"suggestions":"51"},{"ruleId":"52","severity":1,"message":"53","line":6,"column":10,"nodeType":"54","messageId":"55","endLine":6,"endColumn":21},{"ruleId":"48","severity":1,"message":"56","line":31,"column":6,"nodeType":"50","endLine":31,"endColumn":15,"suggestions":"57"},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'address' and 'fetchTransactions'. Either include them or remove the dependency array.","ArrayExpression",["58"],"@typescript-eslint/no-unused-vars","'BoltRounded' is defined but never used.","Identifier","unusedVar","React Hook useEffect has missing dependencies: 'address' and 'fetchBalance'. Either include them or remove the dependency array.",["59"],{"desc":"60","fix":"61"},{"desc":"62","fix":"63"},"Update the dependencies array to be: [address, fetchTransactions, refresh]",{"range":"64","text":"65"},"Update the dependencies array to be: [address, fetchBalance, refresh]",{"range":"66","text":"67"},[1053,1062],"[address, fetchTransactions, refresh]",[898,907],"[address, fetchBalance, refresh]"]